name: Run Unit Tests and Report Coverage

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
      
    - name: Run tests and generate coverage report
      run: npm test

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Get Coverage Summary
      id: coverage
      run: |
        echo "summary<<EOF" >> $GITHUB_OUTPUT
        cat coverage/coverage-summary.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment PR
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs')
          const coverage = JSON.parse(process.env.COVERAGE)
          const total = coverage.total
          
          const comment = `
          ## Coverage Report
          
          | Type | Percentage |
          |------|------------|
          | Statements | ${total.statements.pct}% |
          | Branches | ${total.branches.pct}% |
          | Functions | ${total.functions.pct}% |
          | Lines | ${total.lines.pct}% |
          
          [Full Report](https://codecov.io/gh/${process.env.GITHUB_REPOSITORY}/pull/${process.env.PR_NUMBER})
          `
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          })
      env:
        COVERAGE: ${{ steps.coverage.outputs.summary }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
